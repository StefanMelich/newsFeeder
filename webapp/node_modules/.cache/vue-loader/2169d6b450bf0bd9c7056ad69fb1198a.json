{"remainingRequest":"C:\\Users\\WIN10\\IdeaProjects\\newsfeeder\\webapp\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\WIN10\\IdeaProjects\\newsfeeder\\webapp\\src\\components\\PostDetail.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\WIN10\\IdeaProjects\\newsfeeder\\webapp\\src\\components\\PostDetail.vue","mtime":1557703749959},{"path":"C:\\Users\\WIN10\\IdeaProjects\\newsfeeder\\webapp\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1557703735755},{"path":"C:\\Users\\WIN10\\IdeaProjects\\newsfeeder\\webapp\\node_modules\\babel-loader\\lib\\index.js","mtime":1557703735405},{"path":"C:\\Users\\WIN10\\IdeaProjects\\newsfeeder\\webapp\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1557703735755},{"path":"C:\\Users\\WIN10\\IdeaProjects\\newsfeeder\\webapp\\node_modules\\vue-loader\\lib\\index.js","mtime":1557703748920}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n\nimport { mdbContainer, mdbRow, mdbCol, mdbListGroup } from 'mdbvue';\nimport { mdbDropdown, /* mdbDropdownToggle,*/ mdbDropdownMenu, mdbDropdownItem } from 'mdbvue';\nimport http from \"../http-common\";\nimport CommentCreateForm from \"./CommentCreateForm\";\nimport Comment from \"./Comment\";\nimport PostUpdate from \"./PostUpdate\";\n\nexport default {\n    name: \"Post\",\n    props: [\"post\"],\n    components: {\n        CommentCreateForm, Comment, PostUpdate,\n        mdbListGroup, mdbContainer, mdbRow, mdbCol,\n        mdbDropdown, mdbDropdownMenu, mdbDropdownItem\n    },\n    data() {\n        return {\n            update: false\n        };\n    },\n    methods: {\n        /* eslint-disable no-console */\n        updatePost(newContent) {\n            console.log(newContent);\n            this.post.content = newContent;\n            this.update = false;\n            let data = {\n                id: this.post.id,\n                content: newContent,\n            };\n            http.put(\"/posts/\" + this.post.id, data)\n                .then(response => {\n                    console.log(response.data);\n                })\n                .catch(e => {\n                    console.log(e);\n                });\n        },\n        updateCancel() {\n            this.update = false;\n        },\n        addComment(newComment) {\n            if (newComment.length != 0)\n            {\n                let data = { content: newComment };\n                http.post(\"/posts/\" + this.post.id + \"/comments\", data)\n                    .then(response => {\n                        console.log(\"response from server after post comment\");\n                        console.log(response);\n                        this.post.comments.push(response.data);\n                    })\n                    .catch(e => {\n                        console.log(e);\n                    });\n            }\n        },\n        deleteComment(commentId) {\n            http.delete(\"/posts/\" + this.post.id + \"/comments/\" + commentId)\n                .then(response => {\n                    console.log(response.data);\n                    let index = this.post.comments.findIndex(c => c.id === commentId);\n                    console.log(index);\n                    this.post.comments.splice(index, 1);\n                })\n                .catch(e => {\n                    console.log(e);\n                });\n        },\n        updateActive(status) {\n            var data = {\n                id: this.post.id,\n                content: this.post.content,\n                active: status\n            };\n            http.put(\"/posts/\" + this.post.id, data)\n                .then(response => {\n                    this.post.active = response.data.active;\n                    console.log(response.data);\n                })\n                .catch(e => {\n                    console.log(e);\n                });\n        },\n        deletePost() {\n            http.delete(\"/posts/\" + this.post.id)\n                .then(response => {\n                    console.log(response.data);\n                    this.$emit(\"refreshData\");\n                    this.$router.push('/');\n                })\n                .catch(e => {\n                    console.log(e);\n                });\n        }\n    }\n};\n\n",{"version":3,"sources":["PostDetail.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsDA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"PostDetail.vue","sourceRoot":"src/components","sourcesContent":["<template>\r\n\r\n    <mdb-container fluid>\r\n        <mdb-row class=\"justify-content-center\">\r\n            <mdb-col col=\"6\">\r\n                <div class=\"z-depth-1 z-box\">\r\n\r\n                    <!-- dropdown -->\r\n                    <mdb-dropdown class=\"dropdown-right\">\r\n                        <button class=\"close\" slot=\"toggle\" type=\"button\" aria-label=\"Close\">\r\n                            <i class=\"fas fa-ellipsis-h\"></i>\r\n                        </button>\r\n                        <mdb-dropdown-menu color=\"primary\" right>\r\n                            <mdb-dropdown-item @click.native=\"update = true\">\r\n                                Update\r\n                            </mdb-dropdown-item>\r\n                            <mdb-dropdown-item @click.native=\"deletePost\">Delete</mdb-dropdown-item>\r\n                            <mdb-dropdown-item>\r\n                                <router-link to=\"/\">Close</router-link>\r\n                            </mdb-dropdown-item>\r\n                        </mdb-dropdown-menu>\r\n                    </mdb-dropdown>\r\n                    <!-- Content of post -->\r\n                    <p class=\"content\">\r\n                        {{ this.post.content }}\r\n                    </p>\r\n                    <!-- new action buttons group\r\n                    <mdb-btn rounded color=\"danger\" @click=\"deletePost()\">Delete</mdb-btn> -->\r\n                </div>\r\n\r\n                <!-- update post form -->\r\n                <post-update class=\"z-depth-1 z-box\" v-if=\"update\"\r\n                             :content=\"this.post.content\"\r\n                             @update-post-event=\"updatePost($event)\"\r\n                             @update-post-cancel=\"updateCancel\">\r\n                </post-update>\r\n                <!-- add comment form -->\r\n                <comment-create-form @add-comment-event=\"addComment($event)\" />\r\n                <!-- comments list -->\r\n                <mdb-list-group>\r\n                    <comment v-for=\"comment in post.comments\"\r\n                             :key=\"comment.id\"\r\n                             :comment=\"comment\"\r\n                             @delete-comment=\"deleteComment($event)\">\r\n                    </comment>\r\n                </mdb-list-group>\r\n            </mdb-col>\r\n        </mdb-row>\r\n    </mdb-container>\r\n\r\n</template>\r\n\r\n<script>\r\n\r\n    import { mdbContainer, mdbRow, mdbCol, mdbListGroup } from 'mdbvue';\r\n    import { mdbDropdown, /* mdbDropdownToggle,*/ mdbDropdownMenu, mdbDropdownItem } from 'mdbvue';\r\n    import http from \"../http-common\";\r\n    import CommentCreateForm from \"./CommentCreateForm\";\r\n    import Comment from \"./Comment\";\r\n    import PostUpdate from \"./PostUpdate\";\r\n\r\n    export default {\r\n        name: \"Post\",\r\n        props: [\"post\"],\r\n        components: {\r\n            CommentCreateForm, Comment, PostUpdate,\r\n            mdbListGroup, mdbContainer, mdbRow, mdbCol,\r\n            mdbDropdown, mdbDropdownMenu, mdbDropdownItem\r\n        },\r\n        data() {\r\n            return {\r\n                update: false\r\n            };\r\n        },\r\n        methods: {\r\n            /* eslint-disable no-console */\r\n            updatePost(newContent) {\r\n                console.log(newContent);\r\n                this.post.content = newContent;\r\n                this.update = false;\r\n                let data = {\r\n                    id: this.post.id,\r\n                    content: newContent,\r\n                };\r\n                http.put(\"/posts/\" + this.post.id, data)\r\n                    .then(response => {\r\n                        console.log(response.data);\r\n                    })\r\n                    .catch(e => {\r\n                        console.log(e);\r\n                    });\r\n            },\r\n            updateCancel() {\r\n                this.update = false;\r\n            },\r\n            addComment(newComment) {\r\n                if (newComment.length != 0)\r\n                {\r\n                    let data = { content: newComment };\r\n                    http.post(\"/posts/\" + this.post.id + \"/comments\", data)\r\n                        .then(response => {\r\n                            console.log(\"response from server after post comment\");\r\n                            console.log(response);\r\n                            this.post.comments.push(response.data);\r\n                        })\r\n                        .catch(e => {\r\n                            console.log(e);\r\n                        });\r\n                }\r\n            },\r\n            deleteComment(commentId) {\r\n                http.delete(\"/posts/\" + this.post.id + \"/comments/\" + commentId)\r\n                    .then(response => {\r\n                        console.log(response.data);\r\n                        let index = this.post.comments.findIndex(c => c.id === commentId);\r\n                        console.log(index);\r\n                        this.post.comments.splice(index, 1);\r\n                    })\r\n                    .catch(e => {\r\n                        console.log(e);\r\n                    });\r\n            },\r\n            updateActive(status) {\r\n                var data = {\r\n                    id: this.post.id,\r\n                    content: this.post.content,\r\n                    active: status\r\n                };\r\n                http.put(\"/posts/\" + this.post.id, data)\r\n                    .then(response => {\r\n                        this.post.active = response.data.active;\r\n                        console.log(response.data);\r\n                    })\r\n                    .catch(e => {\r\n                        console.log(e);\r\n                    });\r\n            },\r\n            deletePost() {\r\n                http.delete(\"/posts/\" + this.post.id)\r\n                    .then(response => {\r\n                        console.log(response.data);\r\n                        this.$emit(\"refreshData\");\r\n                        this.$router.push('/');\r\n                    })\r\n                    .catch(e => {\r\n                        console.log(e);\r\n                    });\r\n            }\r\n        }\r\n    };\r\n\r\n</script>\r\n\r\n<style scoped>\r\n\r\n    span:before, span:after {\r\n        content: '\\00a0';\r\n    }\r\n\r\n    .content {\r\n        margin: 2em;\r\n    }\r\n\r\n    /* from comment-list */\r\n    comment {\r\n        margin-top: 1em;\r\n    }\r\n\r\n    .list-group-item:first-child, .list-group-item:last-child {\r\n        border-radius: 0.5em;\r\n    }\r\n\r\n    ul li {\r\n        margin: 0em 1em 0.5em 1em;\r\n        padding: 2em;\r\n        border-radius: 0.5em;\r\n    }\r\n\r\n    list {\r\n        margin-bottom: 5em;\r\n    }\r\n\r\n    .dropdown-right {\r\n         float: right;\r\n     }\r\n\r\n</style>"]}]}