{"remainingRequest":"C:\\Users\\WIN10\\IdeaProjects\\newsfeeder\\webapp\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\WIN10\\IdeaProjects\\newsfeeder\\webapp\\src\\auth\\views\\Register.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\WIN10\\IdeaProjects\\newsfeeder\\webapp\\src\\auth\\views\\Register.vue","mtime":1578912452341},{"path":"C:\\Users\\WIN10\\IdeaProjects\\newsfeeder\\webapp\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1557703735755},{"path":"C:\\Users\\WIN10\\IdeaProjects\\newsfeeder\\webapp\\node_modules\\babel-loader\\lib\\index.js","mtime":1557703735405},{"path":"C:\\Users\\WIN10\\IdeaProjects\\newsfeeder\\webapp\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1557703735755},{"path":"C:\\Users\\WIN10\\IdeaProjects\\newsfeeder\\webapp\\node_modules\\vue-loader\\lib\\index.js","mtime":1557703748920}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport User from '../models/user';\nimport { mdbContainer, mdbRow, mdbCol,  mdbInput, mdbBtn, } from 'mdbvue';\n\nexport default {\n    name: 'register',\n    components: {\n        mdbContainer, mdbRow, mdbCol, mdbInput, mdbBtn\n    },\n    computed: {\n        loggedIn() {\n            return this.$store.state.auth.status.loggedIn;\n        }\n    },\n    data() {\n        return {\n            user: new User('', '', '', 'A'),\n            submitted: false,\n            successful: false,\n            message: ''\n        };\n    },\n    mounted() {\n        if (this.loggedIn) {\n            this.$router.push('/profile');\n        }\n    },\n    methods: {\n        handleRegister() {\n            this.message = '';\n            this.submitted = true;\n            this.$validator.validate().then(valid => {\n                if (valid) {\n                    this.$store.dispatch('auth/register', this.user)\n                        .then(\n                        data => {\n                            this.message = data.message;\n                            this.successful = true;\n                            this.$router.push('/profile');\n                        },\n                        error => {\n                            this.message = error.message;\n                            this.successful = false;\n                        }\n                    );\n                }\n                else {\n                    window.alert(\"Username or password is too short.\");\n                }\n            });\n        }\n    }\n};\n",{"version":3,"sources":["Register.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgDA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Register.vue","sourceRoot":"src/auth/views","sourcesContent":["<template>\r\n\r\n    <mdb-container fluid>\r\n        <mdb-row class=\"justify-content-center\">\r\n            <mdb-col col=\"6\">\r\n\r\n                <div v-if=\"!successful\">\r\n                    <form class=\"md-form z-depth-1 z-box\" @submit.prevent=\"handleRegister\">\r\n                        <p class=\"h4 text-center mb-4\">Sign in</p>\r\n                        <div class=\"grey-text\">\r\n                            <mdb-input\r\n                                    label=\"Username\"\r\n                                    icon=\"user\"\r\n                                    type=\"text\"\r\n                                    v-model=\"user.username\"\r\n                                    v-validate=\"'required|min:3|max:20'\"/>\r\n                            <div class=\"alert-danger\" v-if=\"submitted && errors.has('username')\">\r\n                                {{errors.first('username')}}\r\n                            </div>\r\n\r\n                            <mdb-input label=\"Email\"  icon=\"envelope\" type=\"email\" v-model=\"user.email\"/>\r\n                            <mdb-input\r\n                                    label=\"Your password\"\r\n                                    icon=\"lock\"\r\n                                    type=\"password\"\r\n                                    v-model=\"user.password\"\r\n                                    v-validate=\"'required|min:6|max:40'\"/>\r\n                            <div class=\"alert-danger\" v-if=\"submitted && errors.has('password')\">\r\n                                {{errors.first('password')}}\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"text-center\">\r\n                            <mdb-btn color=\"primary\">Login</mdb-btn>\r\n                        </div>\r\n                        <div class=\"alert\"\r\n                             :class=\"successful ? 'alert-success' : 'alert-danger'\"\r\n                             v-if=\"message\">\r\n                            {{message}}\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n\r\n            </mdb-col>\r\n        </mdb-row>\r\n    </mdb-container>\r\n</template>\r\n\r\n<script>\r\n    import User from '../models/user';\r\n    import { mdbContainer, mdbRow, mdbCol,  mdbInput, mdbBtn, } from 'mdbvue';\r\n\r\n    export default {\r\n        name: 'register',\r\n        components: {\r\n            mdbContainer, mdbRow, mdbCol, mdbInput, mdbBtn\r\n        },\r\n        computed: {\r\n            loggedIn() {\r\n                return this.$store.state.auth.status.loggedIn;\r\n            }\r\n        },\r\n        data() {\r\n            return {\r\n                user: new User('', '', '', 'A'),\r\n                submitted: false,\r\n                successful: false,\r\n                message: ''\r\n            };\r\n        },\r\n        mounted() {\r\n            if (this.loggedIn) {\r\n                this.$router.push('/profile');\r\n            }\r\n        },\r\n        methods: {\r\n            handleRegister() {\r\n                this.message = '';\r\n                this.submitted = true;\r\n                this.$validator.validate().then(valid => {\r\n                    if (valid) {\r\n                        this.$store.dispatch('auth/register', this.user)\r\n                            .then(\r\n                            data => {\r\n                                this.message = data.message;\r\n                                this.successful = true;\r\n                                this.$router.push('/profile');\r\n                            },\r\n                            error => {\r\n                                this.message = error.message;\r\n                                this.successful = false;\r\n                            }\r\n                        );\r\n                    }\r\n                    else {\r\n                        window.alert(\"Username or password is too short.\");\r\n                    }\r\n                });\r\n            }\r\n        }\r\n    };\r\n</script>\r\n\r\n<style scoped>\r\n\r\n    * {\r\n        text-align: left;\r\n    }\r\n\r\n</style>"]}]}