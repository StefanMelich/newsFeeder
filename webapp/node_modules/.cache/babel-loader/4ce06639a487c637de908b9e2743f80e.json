{"remainingRequest":"C:\\Users\\WIN10\\IdeaProjects\\newsfeeder\\webapp\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\WIN10\\IdeaProjects\\newsfeeder\\webapp\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\WIN10\\IdeaProjects\\newsfeeder\\webapp\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\WIN10\\IdeaProjects\\newsfeeder\\webapp\\src\\components\\PostAdd.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\WIN10\\IdeaProjects\\newsfeeder\\webapp\\src\\components\\PostAdd.vue","mtime":1578909122665},{"path":"C:\\Users\\WIN10\\IdeaProjects\\newsfeeder\\webapp\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1557703735755},{"path":"C:\\Users\\WIN10\\IdeaProjects\\newsfeeder\\webapp\\node_modules\\babel-loader\\lib\\index.js","mtime":1557703735405},{"path":"C:\\Users\\WIN10\\IdeaProjects\\newsfeeder\\webapp\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1557703735755},{"path":"C:\\Users\\WIN10\\IdeaProjects\\newsfeeder\\webapp\\node_modules\\vue-loader\\lib\\index.js","mtime":1557703748920}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { mdbModal, mdbModalHeader, mdbModalTitle, mdbModalBody, mdbModalFooter, mdbBtn, mdbInput } from 'mdbvue';\nimport postService from \"../auth/services/post.service\";\nexport default {\n  name: \"PostAdd\",\n  components: {\n    mdbModal: mdbModal,\n    mdbModalHeader: mdbModalHeader,\n    mdbModalTitle: mdbModalTitle,\n    mdbModalBody: mdbModalBody,\n    mdbModalFooter: mdbModalFooter,\n    mdbBtn: mdbBtn,\n    mdbInput: mdbInput\n  },\n  data: function data() {\n    return {\n      modal: true,\n      content: '',\n      hasError: false\n    };\n  },\n  methods: {\n    /* eslint-disable no-console */\n    close: function close() {\n      this.modal = false;\n      this.$router.push({\n        name: 'posts-list'\n      });\n    },\n    save: function save() {\n      if (!this.hasError) {\n        this.modal = false;\n        this.addPost(this.content);\n        console.log(\"new post released\");\n      } else {\n        alert(\"Content length is too long.\");\n      }\n    },\n    isError: function isError(remaining) {\n      this.hasError = remaining < 0;\n    },\n    addPost: function addPost(content) {\n      var _this = this;\n\n      var data = {\n        content: content\n      };\n      postService.createPost(data).then(function (response) {\n        console.log(response.data); // redirect after response from server\n\n        _this.$router.push({\n          name: 'posts-list'\n        });\n      }).catch(function (e) {\n        return console.log(e);\n      });\n    }\n  },\n  computed: {\n    computedCountDown: function computedCountDown() {\n      var chars = this.content.length;\n      var limit = 250;\n      var remaining = limit - chars;\n      this.isError(remaining);\n      return remaining + \"/\" + limit + \" characters remaining\";\n    }\n  }\n};",{"version":3,"sources":["PostAdd.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AA2BA,SAAA,QAAA,EAAA,cAAA,EAAA,aAAA,EAAA,YAAA,EAAA,cAAA,EAAA,MAAA,EAAA,QAAA,QAAA,QAAA;AACA,OAAA,WAAA,MAAA,+BAAA;AAEA,eAAA;AACA,EAAA,IAAA,EAAA,SADA;AAEA,EAAA,UAAA,EAAA;AACA,IAAA,QAAA,EAAA,QADA;AAEA,IAAA,cAAA,EAAA,cAFA;AAGA,IAAA,aAAA,EAAA,aAHA;AAIA,IAAA,YAAA,EAAA,YAJA;AAKA,IAAA,cAAA,EAAA,cALA;AAMA,IAAA,MAAA,EAAA,MANA;AAOA,IAAA,QAAA,EAAA;AAPA,GAFA;AAWA,EAAA,IAXA,kBAWA;AACA,WAAA;AACA,MAAA,KAAA,EAAA,IADA;AAEA,MAAA,OAAA,EAAA,EAFA;AAGA,MAAA,QAAA,EAAA;AAHA,KAAA;AAKA,GAjBA;AAkBA,EAAA,OAAA,EAAA;AACA;AACA,IAAA,KAFA,mBAEA;AACA,WAAA,KAAA,GAAA,KAAA;AACA,WAAA,OAAA,CAAA,IAAA,CAAA;AAAA,QAAA,IAAA,EAAA;AAAA,OAAA;AACA,KALA;AAMA,IAAA,IANA,kBAMA;AACA,UAAA,CAAA,KAAA,QAAA,EAAA;AACA,aAAA,KAAA,GAAA,KAAA;AACA,aAAA,OAAA,CAAA,KAAA,OAAA;AAEA,QAAA,OAAA,CAAA,GAAA,CAAA,mBAAA;AACA,OALA,MAKA;AACA,QAAA,KAAA,CAAA,6BAAA,CAAA;AACA;AACA,KAfA;AAgBA,IAAA,OAhBA,mBAgBA,SAhBA,EAgBA;AACA,WAAA,QAAA,GAAA,SAAA,GAAA,CAAA;AACA,KAlBA;AAmBA,IAAA,OAnBA,mBAmBA,OAnBA,EAmBA;AAAA;;AACA,UAAA,IAAA,GAAA;AAAA,QAAA,OAAA,EAAA;AAAA,OAAA;AACA,MAAA,WAAA,CACA,UADA,CACA,IADA,EAEA,IAFA,CAEA,UAAA,QAAA,EAAA;AACA,QAAA,OAAA,CAAA,GAAA,CAAA,QAAA,CAAA,IAAA,EADA,CAEA;;AACA,QAAA,KAAA,CAAA,OAAA,CAAA,IAAA,CAAA;AAAA,UAAA,IAAA,EAAA;AAAA,SAAA;AACA,OANA,EAOA,KAPA,CAOA,UAAA,CAAA;AAAA,eAAA,OAAA,CAAA,GAAA,CAAA,CAAA,CAAA;AAAA,OAPA;AAQA;AA7BA,GAlBA;AAiDA,EAAA,QAAA,EAAA;AACA,IAAA,iBADA,+BACA;AACA,UAAA,KAAA,GAAA,KAAA,OAAA,CAAA,MAAA;AACA,UAAA,KAAA,GAAA,GAAA;AACA,UAAA,SAAA,GAAA,KAAA,GAAA,KAAA;AACA,WAAA,OAAA,CAAA,SAAA;AACA,aAAA,SAAA,GAAA,GAAA,GAAA,KAAA,GAAA,uBAAA;AACA;AAPA;AAjDA,CAAA","sourcesContent":["<template>\r\n    <div>\r\n        <mdb-modal :show=\"modal\" @close=\"close\">\r\n            <mdb-modal-header>\r\n                <mdb-modal-title>New Post</mdb-modal-title>\r\n            </mdb-modal-header>\r\n            <mdb-modal-body>\r\n                <!-- main content here -->\r\n                <mdb-input type=\"textarea\" label=\"Content of a new post.\" outline :rows=\"5\"\r\n                           v-model=\"content\"/>\r\n\r\n                <div class=\"text-right\">\r\n                    <p class='text-small' v-bind:class=\"{'text-danger': hasError }\">\r\n                        {{ computedCountDown }}\r\n                    </p>\r\n                </div>\r\n                <!-- main content here -->\r\n            </mdb-modal-body>\r\n            <mdb-modal-footer>\r\n                <mdb-btn color=\"secondary\" @click.native=\"close\">Close</mdb-btn>\r\n                <mdb-btn color=\"primary\" @click.native=\"save\">Save changes</mdb-btn>\r\n            </mdb-modal-footer>\r\n        </mdb-modal>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n    import { mdbModal, mdbModalHeader, mdbModalTitle, mdbModalBody, mdbModalFooter, mdbBtn, mdbInput } from 'mdbvue';\r\n    import postService from \"../auth/services/post.service\";\r\n\r\n    export default {\r\n        name: \"PostAdd\",\r\n        components: {\r\n            mdbModal,\r\n            mdbModalHeader,\r\n            mdbModalTitle,\r\n            mdbModalBody,\r\n            mdbModalFooter,\r\n            mdbBtn,\r\n            mdbInput\r\n        },\r\n        data() {\r\n            return {\r\n                modal: true,\r\n                content: '',\r\n                hasError: false\r\n            };\r\n        },\r\n        methods: {\r\n            /* eslint-disable no-console */\r\n            close() {\r\n                this.modal = false;\r\n                this.$router.push({name: 'posts-list'});\r\n            },\r\n            save() {\r\n                if (!this.hasError) {\r\n                    this.modal = false;\r\n                    this.addPost(this.content);\r\n\r\n                    console.log(\"new post released\");\r\n                } else {\r\n                    alert(\"Content length is too long.\");\r\n                }\r\n            },\r\n            isError(remaining) {\r\n                this.hasError = remaining < 0;\r\n            },\r\n            addPost(content) {\r\n                let data = { content: content };\r\n                postService\r\n                    .createPost(data)\r\n                    .then(response => {\r\n                        console.log(response.data);\r\n                        // redirect after response from server\r\n                        this.$router.push({name: 'posts-list'});\r\n                    })\r\n                    .catch(e => console.log(e));\r\n            }\r\n        },\r\n        computed: {\r\n            computedCountDown() {\r\n                let chars = this.content.length;\r\n                let limit = 250;\r\n                let remaining = (limit - chars);\r\n                this.isError(remaining);\r\n                return remaining + \"/\" + limit + \" characters remaining\";\r\n            }\r\n        },\r\n    }\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>"],"sourceRoot":"src/components"}]}