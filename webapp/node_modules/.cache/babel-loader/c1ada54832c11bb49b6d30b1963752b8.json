{"remainingRequest":"C:\\Users\\WIN10\\IdeaProjects\\newsfeeder\\webapp\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\WIN10\\IdeaProjects\\newsfeeder\\webapp\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\WIN10\\IdeaProjects\\newsfeeder\\webapp\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\WIN10\\IdeaProjects\\newsfeeder\\webapp\\src\\auth\\views\\Login.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\WIN10\\IdeaProjects\\newsfeeder\\webapp\\src\\auth\\views\\Login.vue","mtime":1578908717514},{"path":"C:\\Users\\WIN10\\IdeaProjects\\newsfeeder\\webapp\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1557703735755},{"path":"C:\\Users\\WIN10\\IdeaProjects\\newsfeeder\\webapp\\node_modules\\babel-loader\\lib\\index.js","mtime":1557703735405},{"path":"C:\\Users\\WIN10\\IdeaProjects\\newsfeeder\\webapp\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1557703735755},{"path":"C:\\Users\\WIN10\\IdeaProjects\\newsfeeder\\webapp\\node_modules\\vue-loader\\lib\\index.js","mtime":1557703748920}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { mdbContainer, mdbRow, mdbCol, mdbInput, mdbBtn, mdbAlert } from 'mdbvue';\nimport User from '../models/user';\nexport default {\n  name: 'login',\n  components: {\n    mdbContainer: mdbContainer,\n    mdbRow: mdbRow,\n    mdbCol: mdbCol,\n    mdbInput: mdbInput,\n    mdbBtn: mdbBtn,\n    mdbAlert: mdbAlert\n  },\n  data: function data() {\n    return {\n      username: '',\n      password: '',\n      unauthorized: false\n    };\n  },\n  mounted: function mounted() {\n    // if user is loggedIn -> redirect to profile page\n    var loggedIn = this.$store.state.auth.status.loggedIn;\n\n    if (loggedIn) {\n      this.$router.push('/profile');\n    }\n  },\n  methods: {\n    handleLogin: function handleLogin() {\n      var _this = this;\n\n      this.unauthorized = false;\n      this.$validator.validateAll();\n\n      if (this.errors.any()) {\n        this.unauthorized = true;\n        return;\n      }\n\n      if (this.username && this.password) {\n        var user = new User(this.username, '', this.password);\n        /* eslint-disable no-console */\n\n        this.$store.dispatch('auth/login', user).then(function () {\n          return _this.$router.push('/profile');\n        }, function (error) {\n          _this.unauthorized = true;\n          console.log(error);\n        }).catch(function (e) {\n          return console.log(\"Error: \" + e);\n        });\n      }\n    }\n  }\n};",{"version":3,"sources":["Login.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmCA,SAAA,YAAA,EAAA,MAAA,EAAA,MAAA,EAAA,QAAA,EAAA,MAAA,EAAA,QAAA,QAAA,QAAA;AACA,OAAA,IAAA,MAAA,gBAAA;AAEA,eAAA;AACA,EAAA,IAAA,EAAA,OADA;AAEA,EAAA,UAAA,EAAA;AACA,IAAA,YAAA,EAAA,YADA;AACA,IAAA,MAAA,EAAA,MADA;AACA,IAAA,MAAA,EAAA,MADA;AACA,IAAA,QAAA,EAAA,QADA;AACA,IAAA,MAAA,EAAA,MADA;AACA,IAAA,QAAA,EAAA;AADA,GAFA;AAKA,EAAA,IALA,kBAKA;AACA,WAAA;AACA,MAAA,QAAA,EAAA,EADA;AAEA,MAAA,QAAA,EAAA,EAFA;AAGA,MAAA,YAAA,EAAA;AAHA,KAAA;AAKA,GAXA;AAYA,EAAA,OAZA,qBAYA;AACA;AACA,QAAA,QAAA,GAAA,KAAA,MAAA,CAAA,KAAA,CAAA,IAAA,CAAA,MAAA,CAAA,QAAA;;AACA,QAAA,QAAA,EAAA;AACA,WAAA,OAAA,CAAA,IAAA,CAAA,UAAA;AACA;AACA,GAlBA;AAmBA,EAAA,OAAA,EAAA;AACA,IAAA,WADA,yBACA;AAAA;;AACA,WAAA,YAAA,GAAA,KAAA;AACA,WAAA,UAAA,CAAA,WAAA;;AAEA,UAAA,KAAA,MAAA,CAAA,GAAA,EAAA,EAAA;AACA,aAAA,YAAA,GAAA,IAAA;AACA;AACA;;AAEA,UAAA,KAAA,QAAA,IAAA,KAAA,QAAA,EAAA;AACA,YAAA,IAAA,GAAA,IAAA,IAAA,CAAA,KAAA,QAAA,EAAA,EAAA,EAAA,KAAA,QAAA,CAAA;AACA;;AACA,aAAA,MAAA,CACA,QADA,CACA,YADA,EACA,IADA,EAEA,IAFA,CAGA;AAAA,iBAAA,KAAA,CAAA,OAAA,CAAA,IAAA,CAAA,UAAA,CAAA;AAAA,SAHA,EAIA,UAAA,KAAA,EAAA;AACA,UAAA,KAAA,CAAA,YAAA,GAAA,IAAA;AACA,UAAA,OAAA,CAAA,GAAA,CAAA,KAAA;AACA,SAPA,EAQA,KARA,CAQA,UAAA,CAAA;AAAA,iBAAA,OAAA,CAAA,GAAA,CAAA,YAAA,CAAA,CAAA;AAAA,SARA;AASA;AACA;AAvBA;AAnBA,CAAA","sourcesContent":["<template>\r\n\r\n    <mdb-container fluid>\r\n        <mdb-row class=\"justify-content-center\">\r\n            <mdb-col col=\"6\">\r\n\r\n                <form class=\"md-form z-depth-1 z-box\" @submit.prevent=\"handleLogin\">\r\n                    <p class=\"h4 text-center mb-4\">Sign in</p>\r\n                    <div class=\"grey-text\">\r\n                        <mdb-input\r\n                                label=\"Your username\"\r\n                                icon=\"user\"\r\n                                type=\"text\"\r\n                                v-model=\"username\"/>\r\n                        <mdb-input\r\n                                label=\"Your password\"\r\n                                icon=\"lock\"\r\n                                type=\"password\"\r\n                                v-model=\"password\"/>\r\n                    </div>\r\n                    <div class=\"text-center\">\r\n                        <mdb-btn color=\"primary\">Login</mdb-btn>\r\n                    </div>\r\n                    <mdb-alert color=\"danger\" v-if=\"unauthorized\">\r\n                        Incorrect username or password.\r\n                    </mdb-alert>\r\n                </form>\r\n\r\n            </mdb-col>\r\n        </mdb-row>\r\n    </mdb-container>\r\n\r\n</template>\r\n\r\n<script>\r\n    import { mdbContainer, mdbRow, mdbCol,  mdbInput, mdbBtn, mdbAlert } from 'mdbvue';\r\n    import User from '../models/user';\r\n\r\n    export default {\r\n        name: 'login',\r\n        components: {\r\n           mdbContainer, mdbRow, mdbCol, mdbInput, mdbBtn, mdbAlert\r\n        },\r\n        data() {\r\n            return {\r\n                username: '',\r\n                password: '',\r\n                unauthorized: false\r\n            };\r\n        },\r\n        mounted() {\r\n            // if user is loggedIn -> redirect to profile page\r\n            let loggedIn = this.$store.state.auth.status.loggedIn;\r\n            if (loggedIn) {\r\n                this.$router.push('/profile');\r\n            }\r\n        },\r\n        methods: {\r\n            handleLogin() {\r\n                this.unauthorized = false;\r\n                this.$validator.validateAll();\r\n\r\n                if (this.errors.any()) {\r\n                    this.unauthorized = true;\r\n                    return;\r\n                }\r\n\r\n                if (this.username && this.password) {\r\n                    let user = new User(this.username, '', this.password);\r\n                    /* eslint-disable no-console */\r\n                    this.$store\r\n                        .dispatch('auth/login', user)\r\n                        .then(\r\n                            () =>  this.$router.push('/profile'),\r\n                            error => {\r\n                                this.unauthorized = true;\r\n                                console.log(error);\r\n                        })\r\n                        .catch(e => console.log(\"Error: \" + e));\r\n                }\r\n            }\r\n        }\r\n    };\r\n</script>\r\n\r\n<style scoped>\r\n\r\n    * {\r\n        text-align: left;\r\n    }\r\n\r\n</style>"],"sourceRoot":"src/auth/views"}]}