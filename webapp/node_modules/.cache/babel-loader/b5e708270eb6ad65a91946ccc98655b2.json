{"remainingRequest":"C:\\Users\\WIN10\\IdeaProjects\\newsfeeder\\webapp\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\WIN10\\IdeaProjects\\newsfeeder\\webapp\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\WIN10\\IdeaProjects\\newsfeeder\\webapp\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\WIN10\\IdeaProjects\\newsfeeder\\webapp\\src\\components\\PostUpdate.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\WIN10\\IdeaProjects\\newsfeeder\\webapp\\src\\components\\PostUpdate.vue","mtime":1557217564265},{"path":"C:\\Users\\WIN10\\IdeaProjects\\newsfeeder\\webapp\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\WIN10\\IdeaProjects\\newsfeeder\\webapp\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\WIN10\\IdeaProjects\\newsfeeder\\webapp\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\WIN10\\IdeaProjects\\newsfeeder\\webapp\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { mdbBtn, mdbInput } from 'mdbvue';\nexport default {\n  name: \"PostUpdate\",\n  props: {\n    content: String\n  },\n  components: {\n    mdbBtn: mdbBtn,\n    mdbInput: mdbInput\n  },\n  data: function data() {\n    return {\n      message: '',\n      hasError: false\n    };\n  },\n  methods: {\n    updatePost: function updatePost() {\n      if (!this.hasError) {\n        this.$emit('update-post-event', this.message);\n      } else {\n        alert(\"Content length is too long.\");\n      }\n    },\n    cancel: function cancel() {\n      this.$emit('update-post-cancel');\n    },\n    isError: function isError(remaining) {\n      this.hasError = remaining < 0;\n    }\n  },\n  computed: {\n    computedCountDown: function computedCountDown() {\n      var chars = this.message.length;\n      var limit = 250;\n      var remaining = limit - chars;\n      this.isError(remaining);\n      return remaining + \"/\" + limit + \" characters remaining\";\n    }\n  },\n  mounted: function mounted() {\n    this.message = this.content;\n  }\n};",{"version":3,"sources":["PostUpdate.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;AAkBA,SAAA,MAAA,EAAA,QAAA,QAAA,QAAA;AAEA,eAAA;AACA,EAAA,IAAA,EAAA,YADA;AAEA,EAAA,KAAA,EAAA;AACA,IAAA,OAAA,EAAA;AADA,GAFA;AAKA,EAAA,UAAA,EAAA;AACA,IAAA,MAAA,EAAA,MADA;AACA,IAAA,QAAA,EAAA;AADA,GALA;AAQA,EAAA,IARA,kBAQA;AACA,WAAA;AACA,MAAA,OAAA,EAAA,EADA;AAEA,MAAA,QAAA,EAAA;AAFA,KAAA;AAIA,GAbA;AAcA,EAAA,OAAA,EAAA;AACA,IAAA,UADA,wBACA;AACA,UAAA,CAAA,KAAA,QAAA,EAAA;AACA,aAAA,KAAA,CAAA,mBAAA,EAAA,KAAA,OAAA;AACA,OAFA,MAEA;AACA,QAAA,KAAA,CAAA,6BAAA,CAAA;AACA;AACA,KAPA;AAQA,IAAA,MARA,oBAQA;AACA,WAAA,KAAA,CAAA,oBAAA;AACA,KAVA;AAWA,IAAA,OAXA,mBAWA,SAXA,EAWA;AACA,WAAA,QAAA,GAAA,SAAA,GAAA,CAAA;AACA;AAbA,GAdA;AA6BA,EAAA,QAAA,EAAA;AACA,IAAA,iBADA,+BACA;AACA,UAAA,KAAA,GAAA,KAAA,OAAA,CAAA,MAAA;AACA,UAAA,KAAA,GAAA,GAAA;AACA,UAAA,SAAA,GAAA,KAAA,GAAA,KAAA;AACA,WAAA,OAAA,CAAA,SAAA;AACA,aAAA,SAAA,GAAA,GAAA,GAAA,KAAA,GAAA,uBAAA;AACA;AAPA,GA7BA;AAsCA,EAAA,OAtCA,qBAsCA;AACA,SAAA,OAAA,GAAA,KAAA,OAAA;AACA;AAxCA,CAAA","sourcesContent":["<template>\r\n\r\n    <div class=\"z-depth-1 z-box\">\r\n        <mdb-input type=\"textarea\" label=\"Update post\" outline :rows=\"3\"\r\n                   v-model=\"message\"/>\r\n\r\n        <div class=\"text-right\">\r\n            <p class='text-small' v-bind:class=\"{'text-danger': hasError }\">\r\n                {{ computedCountDown }}\r\n            </p>\r\n            <mdb-btn rounded color=\"primary\" v-on:click=\"updatePost\">Update</mdb-btn>\r\n            <mdb-btn rounded color=\"default\" @click=\"cancel\">Cancel</mdb-btn>\r\n        </div>\r\n    </div>\r\n\r\n</template>\r\n\r\n<script>\r\n    import { mdbBtn, mdbInput } from 'mdbvue';\r\n\r\n    export default {\r\n        name: \"PostUpdate\",\r\n        props: {\r\n            content: String\r\n        },\r\n        components: {\r\n            mdbBtn, mdbInput\r\n        },\r\n        data() {\r\n            return {\r\n                message: '',\r\n                hasError: false\r\n            }\r\n        },\r\n        methods: {\r\n            updatePost() {\r\n                if (!this.hasError) {\r\n                    this.$emit('update-post-event', this.message);\r\n                } else {\r\n                    alert(\"Content length is too long.\");\r\n                }\r\n            },\r\n            cancel() {\r\n                this.$emit('update-post-cancel');\r\n            },\r\n            isError(remaining) {\r\n                this.hasError = remaining < 0;\r\n            }\r\n        },\r\n        computed: {\r\n            computedCountDown() {\r\n                let chars = this.message.length;\r\n                let limit = 250;\r\n                let remaining = (limit - chars);\r\n                this.isError(remaining);\r\n                return remaining + \"/\" + limit + \" characters remaining\";\r\n            }\r\n        },\r\n        mounted() {\r\n            this.message = this.content\r\n        }\r\n    }\r\n</script>\r\n\r\n<style scoped>\r\n\r\n    .text-small {\r\n        font-size: 0.9em;\r\n    }\r\n\r\n</style>"],"sourceRoot":"src/components"}]}