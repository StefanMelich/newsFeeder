{"remainingRequest":"C:\\Users\\WIN10\\IdeaProjects\\newsfeeder\\webapp\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\WIN10\\IdeaProjects\\newsfeeder\\webapp\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\WIN10\\IdeaProjects\\newsfeeder\\webapp\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\WIN10\\IdeaProjects\\newsfeeder\\webapp\\src\\components\\PostDetail.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\WIN10\\IdeaProjects\\newsfeeder\\webapp\\src\\components\\PostDetail.vue","mtime":1578911043747},{"path":"C:\\Users\\WIN10\\IdeaProjects\\newsfeeder\\webapp\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1557703735755},{"path":"C:\\Users\\WIN10\\IdeaProjects\\newsfeeder\\webapp\\node_modules\\babel-loader\\lib\\index.js","mtime":1557703735405},{"path":"C:\\Users\\WIN10\\IdeaProjects\\newsfeeder\\webapp\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1557703735755},{"path":"C:\\Users\\WIN10\\IdeaProjects\\newsfeeder\\webapp\\node_modules\\vue-loader\\lib\\index.js","mtime":1557703748920}],"contextDependencies":[],"result":["import \"core-js/modules/es6.array.find-index\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { mdbContainer, mdbRow, mdbCol, mdbListGroup } from 'mdbvue';\nimport { mdbDropdown,\n/* mdbDropdownToggle,*/\nmdbDropdownMenu, mdbDropdownItem } from 'mdbvue';\nimport CommentCreateForm from \"./CommentCreateForm\";\nimport Comment from \"./Comment\";\nimport PostUpdate from \"./PostUpdate\";\nimport postService from \"../auth/services/post.service\";\nimport commentService from \"../auth/services/comment.service\";\nexport default {\n  name: \"Post\",\n  props: [\"paramPost\"],\n  components: {\n    CommentCreateForm: CommentCreateForm,\n    Comment: Comment,\n    PostUpdate: PostUpdate,\n    mdbListGroup: mdbListGroup,\n    mdbContainer: mdbContainer,\n    mdbRow: mdbRow,\n    mdbCol: mdbCol,\n    mdbDropdown: mdbDropdown,\n    mdbDropdownMenu: mdbDropdownMenu,\n    mdbDropdownItem: mdbDropdownItem\n  },\n  data: function data() {\n    return {\n      post: this.paramPost,\n      update: false\n    };\n  },\n  mounted: function mounted() {\n    var _this = this;\n\n    /* eslint-disable no-console */\n    commentService.getAllComments(this.post.id).then(function (response) {\n      _this.post.comments = response.data;\n      console.log(response.data);\n    }).catch(function (e) {\n      return console.log(e);\n    });\n  },\n  methods: {\n    /* eslint-disable no-console */\n    updatePost: function updatePost(newContent) {\n      console.log(newContent);\n      this.post.content = newContent;\n      this.update = false;\n      var data = {\n        id: this.post.id,\n        content: newContent\n      };\n      postService.updatePost(data).then(function (response) {\n        console.log(response.data);\n      }).catch(function (e) {\n        console.log(e);\n      });\n    },\n    updateCancel: function updateCancel() {\n      this.update = false;\n    },\n    addComment: function addComment(newComment) {\n      var _this2 = this;\n\n      if (newComment.length != 0) {\n        var data = {\n          content: newComment\n        };\n        commentService.createComment(this.post.id, data).then(function (response) {\n          console.log(\"response from server after post comment\");\n          console.log(response);\n\n          _this2.post.comments.push(response.data);\n        }).catch(function (e) {\n          console.log(e);\n        });\n      }\n    },\n    deleteComment: function deleteComment(commentId) {\n      var _this3 = this;\n\n      commentService.deleteComment(this.post.id, commentId).then(function (response) {\n        console.log(response.data);\n\n        var index = _this3.post.comments.findIndex(function (c) {\n          return c.id === commentId;\n        });\n\n        console.log(index);\n\n        _this3.post.comments.splice(index, 1);\n      }).catch(function (e) {\n        console.log(e);\n      });\n    },\n    deletePost: function deletePost() {\n      var _this4 = this;\n\n      postService.deletePost(this.post.id).then(function (response) {\n        console.log(response.data);\n\n        _this4.$emit(\"refreshData\");\n\n        _this4.$router.push('/');\n      }).catch(function (e) {\n        console.log(e);\n      });\n    }\n  }\n};",{"version":3,"sources":["PostDetail.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n\r\n    <mdb-container fluid>\r\n        <mdb-row class=\"justify-content-center\">\r\n            <mdb-col col=\"6\">\r\n                <div class=\"z-depth-1 z-box\">\r\n\r\n                    <!-- dropdown -->\r\n                    <mdb-dropdown class=\"dropdown-right\">\r\n                        <button class=\"close\" slot=\"toggle\" type=\"button\" aria-label=\"Close\">\r\n                            <i class=\"fas fa-ellipsis-h\"></i>\r\n                        </button>\r\n                        <mdb-dropdown-menu color=\"primary\" right>\r\n                            <mdb-dropdown-item @click.native=\"update = true\">\r\n                                Update\r\n                            </mdb-dropdown-item>\r\n                            <mdb-dropdown-item @click.native=\"deletePost\">Delete</mdb-dropdown-item>\r\n                            <mdb-dropdown-item>\r\n                                <router-link to=\"/\">Close</router-link>\r\n                            </mdb-dropdown-item>\r\n                        </mdb-dropdown-menu>\r\n                    </mdb-dropdown>\r\n                    <!-- Content of post -->\r\n                    <p class=\"content\">\r\n                        {{ this.post.content }}\r\n                    </p>\r\n                    <!-- new action buttons group\r\n                    <mdb-btn rounded color=\"danger\" @click=\"deletePost()\">Delete</mdb-btn> -->\r\n                </div>\r\n\r\n                <!-- update post form -->\r\n                <post-update class=\"z-depth-1 z-box\" v-if=\"update\"\r\n                             :content=\"this.post.content\"\r\n                             @update-post-event=\"updatePost($event)\"\r\n                             @update-post-cancel=\"updateCancel\">\r\n                </post-update>\r\n                <!-- add comment form -->\r\n                <comment-create-form @add-comment-event=\"addComment($event)\" />\r\n                <!-- comments list -->\r\n                <mdb-list-group>\r\n                    <comment v-for=\"comment in this.post.comments\"\r\n                             :key=\"comment.id\"\r\n                             :comment=\"comment\"\r\n                             @delete-comment=\"deleteComment($event)\">\r\n                    </comment>\r\n                </mdb-list-group>\r\n            </mdb-col>\r\n        </mdb-row>\r\n    </mdb-container>\r\n\r\n</template>\r\n\r\n<script>\r\n\r\n    import { mdbContainer, mdbRow, mdbCol, mdbListGroup } from 'mdbvue';\r\n    import { mdbDropdown, /* mdbDropdownToggle,*/ mdbDropdownMenu, mdbDropdownItem } from 'mdbvue';\r\n    import CommentCreateForm from \"./CommentCreateForm\";\r\n    import Comment from \"./Comment\";\r\n    import PostUpdate from \"./PostUpdate\";\r\n    import postService from \"../auth/services/post.service\";\r\n    import commentService from \"../auth/services/comment.service\";\r\n\r\n    export default {\r\n        name: \"Post\",\r\n        props: [\"paramPost\"],\r\n        components: {\r\n            CommentCreateForm, Comment, PostUpdate,\r\n            mdbListGroup, mdbContainer, mdbRow, mdbCol,\r\n            mdbDropdown, mdbDropdownMenu, mdbDropdownItem\r\n        },\r\n        data() {\r\n            return {\r\n                post: this.paramPost,\r\n                update: false\r\n            };\r\n        },\r\n        mounted() {\r\n            /* eslint-disable no-console */\r\n            commentService\r\n                .getAllComments(this.post.id)\r\n                .then(response => {\r\n                    this.post.comments = response.data;\r\n                    console.log(response.data);\r\n                }).catch(e => console.log(e));\r\n        },\r\n        methods: {\r\n            /* eslint-disable no-console */\r\n            updatePost(newContent) {\r\n                console.log(newContent);\r\n                this.post.content = newContent;\r\n                this.update = false;\r\n                let data = {\r\n                    id: this.post.id,\r\n                    content: newContent,\r\n                };\r\n                postService\r\n                    .updatePost(data)\r\n                    .then(response => {\r\n                        console.log(response.data);\r\n                    })\r\n                    .catch(e => {\r\n                        console.log(e);\r\n                    });\r\n            },\r\n            updateCancel() {\r\n                this.update = false;\r\n            },\r\n            addComment(newComment) {\r\n                if (newComment.length != 0)\r\n                {\r\n                    let data = { content: newComment };\r\n                    commentService.createComment(this.post.id, data)\r\n                        .then(response => {\r\n                            console.log(\"response from server after post comment\");\r\n                            console.log(response);\r\n                            this.post.comments.push(response.data);\r\n                        })\r\n                        .catch(e => {\r\n                            console.log(e);\r\n                        });\r\n                }\r\n            },\r\n            deleteComment(commentId) {\r\n                commentService.deleteComment(this.post.id, commentId)\r\n                    .then(response => {\r\n                        console.log(response.data);\r\n                        let index = this.post.comments.findIndex(c => c.id === commentId);\r\n                        console.log(index);\r\n                        this.post.comments.splice(index, 1);\r\n                    })\r\n                    .catch(e => {\r\n                        console.log(e);\r\n                    });\r\n            },\r\n            deletePost() {\r\n                postService.deletePost(this.post.id)\r\n                    .then(response => {\r\n                        console.log(response.data);\r\n                        this.$emit(\"refreshData\");\r\n                        this.$router.push('/');\r\n                    })\r\n                    .catch(e => {\r\n                        console.log(e);\r\n                    });\r\n            }\r\n        }\r\n    };\r\n\r\n</script>\r\n\r\n<style scoped>\r\n\r\n    span:before, span:after {\r\n        content: '\\00a0';\r\n    }\r\n\r\n    .content {\r\n        margin: 2em;\r\n    }\r\n\r\n    /* from comment-list */\r\n    comment {\r\n        margin-top: 1em;\r\n    }\r\n\r\n    .list-group-item:first-child, .list-group-item:last-child {\r\n        border-radius: 0.5em;\r\n    }\r\n\r\n    ul li {\r\n        margin: 0em 1em 0.5em 1em;\r\n        padding: 2em;\r\n        border-radius: 0.5em;\r\n    }\r\n\r\n    list {\r\n        margin-bottom: 5em;\r\n    }\r\n\r\n    .dropdown-right {\r\n         float: right;\r\n     }\r\n\r\n</style>"],"sourceRoot":"src/components"}]}